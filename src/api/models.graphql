scalar DateTime

type User {
  id: ID!
  avatar: String 
  storyImg: String
  charHomeImg: String
  storeImg: String
  userName: String!
  email: String!
  nickName: String!
  password: String!
  zipCode: String! 
  address: String! 
  addressDetail: String!
  phone: String! 
  products: [Product!]!
  funding: [Funding!]!
  cart: [Cart!]!
  payment: [Payment!]!
  buyList: [BuyList!]!
  isFollowing: Boolean
  isSelf: Boolean
  bio: String
  tag1: String
  tag2: String
  tag3: String
  tags: [Tag!]!
  following: [User!]!
  followingCount: Int!
  followers: [User!]!
  followersCount: Int!
  posts: [Post!]!
  postsCount: Int!
  wikiposts: [WikiPost!]!
  wikipostsCount: Int!
  members: [Member!]!
  likes: [Like!]!
  comments: [Comment!]!
  rooms: [Room!]!
  loginSecret: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Product {
  id: ID!
  name: String! 
  user: User!
  price: Int! 
  mainCategory: String! 
  subCategory: String!
  thumbnail: String
  productFiles: [ProductFile!]
  options: [Option!]
  numberOfSales: Int!
  tags: [Tag!]! 
  likes: [Like!]!
  commentproduct: [CommentProduct!]!
  isLiked: Boolean
  likeCount: Int!
  commentCount: Int!
  createdAt: DateTime! 
  updatedAt: DateTime! 
}

type ProductFile {
  id: ID! 
  url: String! 
  product: Product! 
}

type Funding {
  id: ID! 
  name: String! 
  user: User! 
  price: Int! 
  text: String
  targetAmount: Int!
  dueDate: DateTime
  currentAmount: Int 
  numberOfParticipants: Int! 
  mainCategory: String! 
  subCategory: String!
  thumbnail: String
  fundingFiles: [FundingFile!] 
  options: [Option!] 
  tags: [Tag!]! 
  likes: [Like!]! 
  isLiked: Boolean
  likeCount: Int!
  commentCount: Int!
  cart: [Cart!]! 
  buyList: [BuyList!]! 
  payment: [Payment!]! 
  createdAt: DateTime! 
  updatedAt: DateTime! 
}

type FundingFile {
  id: ID! 
  url: String! 
  funding: Funding!
}

type AdminFile {
  id: ID!
  url: String!
}

type Option {
  id: ID! 
  optionName: String! 
  optionprice: Int
  product: Product
  funding: Funding
  cart: Cart
  payment: Payment
  buyList: BuyList
}

type Count {
  id: ID! 
  count: Int! 
  cart: Cart
  payment: Payment! 
}

type Cart {
  id: ID! 
  user: User! 
  product: [Product!]!
  options: [Option!]!
  count: [Count!]!
  pcount: Int!
  payment: [Payment!]
}

type Quantity {
  id: ID!
  quantity: Int!
  user: User! 
  buyList: [BuyList!]!
}

type BuyList {
  id: ID! 
  user: User! 
  product: [Product!]! 
  options: [Option!]
  quantity: [Quantity!]!
}

type Payment {
  id: ID!
  user: User! 
  product: [Product!]! 
  options: [Option!]
  count: [Count!]!
  cart: [Cart!]
}

type Post {
  id: ID!
  title: String!
  caption: String!
  user: User!
  thumbnail: String 
  files: [File]
  likes: [Like!]!
  comments: [Comment!]!
  isLiked: Boolean!
  likeCount: Int!
  commentCount: Int!
  tags: [Tag!]!
  createdAt: String
  updatedAt: String
}

type WikiPost {
  id: ID!
  wtitle: String
  wcaption: String
  user: User!
  wikifiles: [WikiFile!]!
  text: String
  likes: [Like!]!
  wikicomments: [WikiComment!]!
  isLiked: Boolean
  likeCount: Int!
  commentCount: Int!
  tags: [Tag!]
  createdAt: String
  updatedAt: String
}

type Member {
  id: ID! 
  memberName: String!
  avatar: String
  mtag1: String
  mtag2: String
  mtag3: String
  memberTag: [MemberTag!]!
  user: User! 
  files: [File!]! 
  wikifiles: [WikiFile!]!
  createdAt: String
  updatedAt: String
}

type Like {
  id: ID!
  user: User!
  post: Post
  wikipost: WikiPost
  product: Product
  createdAt: String
  updatedAt: String
}

type Comment {
  id: ID!
  text: String!
  user: User!
  post: Post!
  createdAt: String
  updatedAt: String
}

type CommentProduct {
  id: ID!
  text: String!
  user: User!
  product: Product!
  createdAt: String
  updatedAt: String
}

type WikiComment {
  id: ID!
  text: String!
  user: User!
  wikipost: WikiPost!
  createdAt: String
  updatedAt: String
}

type Tag {
  id: ID!
  text: String!
  mainCategory: Boolean
  subCategory: Boolean
  post: Post
  wiikiPost: WikiPost
  product: Product
  funding: Funding
}

type MemberTag {  
  id: ID!
  text: String! 
  member: Member!
  createdAt: String
  updatedAt: String
}

type File {
  id: ID!
  url: String!
  post: Post!
  member: Member
  createdAt: String
  updatedAt: String
}

type WikiFile {
  id: ID!
  url: String!
  wikipost: WikiPost!
  member: Member
  createdAt: String
  updatedAt: String
}

type Room {
  id: ID!
  participants: [User!]!
  messages: [Message!]!
  createdAt: String
  updatedAt: String
}

type Message {
  id: ID!
  text: String!
  from: User!
  to: User!
  room: Room!
  createdAt: String
  updatedAt: String
}
